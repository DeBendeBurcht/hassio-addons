name: 'Addon-Hyperion-NG'

on:
  workflow_dispatch
# Controls when the action will run
on: [ workflow_dispatch ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
      # Installs Node JS
      - uses: actions/setup-node@v4

      - name: Sync version to source
        run: ./.github/scripts/update-hyperion-version.sh
      # Sync version to source
      - run: ./.github/scripts/update-hyperion-version.sh

      - name: Build and Push Docker images
        shell: bash
      - shell: bash
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          ./.github/scripts/build.sh amd64
          ./.github/scripts/build.sh armhf
          ./.github/scripts/build.sh aarch64
          # Assuming this is where you tag and push the image in build.sh
          # Modify this part to use ${DOCKER_USER}
          IMAGE_NAME=$(docker images --filter=reference='bradsjm/hyperion-ng-addon-*' --format "{{.Repository}}:{{.Tag}}" | head -n 1)
          NEW_IMAGE_NAME="${DOCKER_USER}/hyperion-ng-addon-${ARCH}:${GITHUB_SHA}"
          docker tag ${IMAGE_NAME} ${NEW_IMAGE_NAME}
          docker push ${NEW_IMAGE_NAME}
      - name: Update File
        uses: test-room-7/action-update-file@v1
        run: ./.github/scripts/build.sh amd64 &&
             ./.github/scripts/build.sh armhf &&
             ./.github/scripts/build.sh aarch64

      - uses: test-room-7/action-update-file@v1
        if: ${{ env.VERSION != env.RELEASE }}
        with:
          file-path: addon-hyperion-ng/config.json
          commit-msg: Update version
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
      - uses: ncipollo/release-action@v1.14.0
        if: ${{ env.VERSION != env.RELEASE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
